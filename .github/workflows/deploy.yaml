name: Deploy Project
on:
  push:
  workflow_dispatch:
  pull_request:
env:
  NODE_VERSION: 20
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Use env variable
        run: echo "Node version:${{ env.NODE_VERSION }}"
      - name: Use repo variable
        run: echo "API URL:${{ vars.API_URL }}"
      - name: Use repo secret
        run: echo "API KEY:${{ secrets.API_KEY }}"

      - name: Get Code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v5
        with:
          node-version: 20
      #cache
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm i
      - name: Build
        run: npm run build
      - name: up;oad dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: dist/
  deploy:
    if: github.ref == "refs/heads/main"
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist-folder
      - name: List all files
        run: ls -R
      - name: deploy
        run: echo "Deploying..."
